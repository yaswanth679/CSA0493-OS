#include <stdio.h>
#include <stdlib.h>

#define MAX_REQUESTS 100

void scan(int requests[], int n, int start) {
    int direction = 1; // 1 for moving towards higher cylinder numbers, -1 for moving towards lower cylinder numbers
    int total_seek_time = 0;
    int current_position = start;

    // Sorting the requests in ascending order
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                // Swap requests[j] and requests[j + 1]
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // Simulating SCAN algorithm
    int i = 0;
    while (i < n) {
        printf("Disk arm at cylinder %d\n", current_position);
        if (requests[i] >= current_position) {
            direction = 1;
        } else {
            direction = -1;
        }

        while (i < n && ((direction == 1 && requests[i] <= current_position) || (direction == -1 && requests[i] >= current_position))) {
            printf("Servicing request at cylinder %d\n", requests[i]);
            total_seek_time += abs(requests[i] - current_position);
            current_position = requests[i];
            i++;
        }
    }

    printf("Total seek time: %d\n", total_seek_time);
}

int main() {
    int requests[MAX_REQUESTS];
    int n, start;

    printf("Enter the number of requests: ");
    scanf("%d", &n);

    if (n > MAX_REQUESTS || n <= 0) {
        printf("Invalid number of requests\n");
        return 1;
    }

    printf("Enter the request sequence:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
    }

    printf("Enter the starting position of the disk arm: ");
    scanf("%d", &start);

    scan(requests, n, start);

    return 0;
}
